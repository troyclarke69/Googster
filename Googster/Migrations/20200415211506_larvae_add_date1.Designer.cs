// <auto-generated />
using System;
using Googster.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Googster.Migrations
{
    [DbContext(typeof(GoogsterContext))]
    [Migration("20200415211506_larvae_add_date1")]
    partial class larvae_add_date1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Googster.Models.Admin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Domains");

                    b.Property<string>("ExcludeDomains");

                    b.Property<DateTime>("From");

                    b.Property<string>("Language");

                    b.Property<DateTime>("LastPubDate");

                    b.Property<int>("Page");

                    b.Property<int>("PageSize");

                    b.Property<string>("Q");

                    b.Property<DateTime>("RunDate");

                    b.Property<string>("SessionId");

                    b.Property<string>("SortBy");

                    b.Property<string>("Sources");

                    b.Property<DateTime>("To");

                    b.HasKey("Id");

                    b.ToTable("Admin");
                });

            modelBuilder.Entity("Googster.Models.Bug", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Active");

                    b.Property<int>("Cases");

                    b.Property<decimal>("CasesPerOneMillion");

                    b.Property<string>("Country");

                    b.Property<int>("Critical");

                    b.Property<decimal>("DeathPercentage");

                    b.Property<int>("Deaths");

                    b.Property<decimal>("DeathsPerOneMillion");

                    b.Property<DateTime>("DownloadDate");

                    b.Property<string>("Flag");

                    b.Property<string>("Iso2");

                    b.Property<string>("Iso3");

                    b.Property<int>("Lat");

                    b.Property<int>("Long");

                    b.Property<int>("Population");

                    b.Property<int>("Recovered");

                    b.Property<string>("ScrAPI_Id");

                    b.Property<int>("TodayCases");

                    b.Property<int>("TodayDeaths");

                    b.HasKey("Id");

                    b.ToTable("Bug");
                });

            modelBuilder.Entity("Googster.Models.Farm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Farm");
                });

            modelBuilder.Entity("Googster.Models.Feed", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Author");

                    b.Property<string>("Content");

                    b.Property<string>("Description");

                    b.Property<string>("Prediction");

                    b.Property<DateTime>("PublishedAt");

                    b.Property<int>("Rating");

                    b.Property<string>("SessionId");

                    b.Property<int>("SourceId");

                    b.Property<string>("SourceName");

                    b.Property<string>("Title");

                    b.Property<int>("TotalResults");

                    b.Property<string>("Url");

                    b.Property<string>("UrlToImage");

                    b.HasKey("Id");

                    b.ToTable("Feed");
                });

            modelBuilder.Entity("Googster.Models.FeedBag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content");

                    b.Property<int?>("FeedId");

                    b.Property<string>("Note");

                    b.HasKey("Id");

                    b.HasIndex("FeedId");

                    b.ToTable("FeedBag");
                });

            modelBuilder.Entity("Googster.Models.Lane", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<int?>("FarmId");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("FarmId");

                    b.ToTable("Lane");
                });

            modelBuilder.Entity("Googster.Models.Larvae", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cases");

                    b.Property<string>("Country");

                    b.Property<DateTime>("Date1");

                    b.Property<string>("Deaths");

                    b.Property<string>("IntId");

                    b.Property<string>("Province");

                    b.Property<string>("Recovered");

                    b.Property<string>("Result");

                    b.HasKey("Id");

                    b.ToTable("Larvae");
                });

            modelBuilder.Entity("Googster.Models.Tree", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<int?>("LaneId");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("LaneId");

                    b.ToTable("Tree");
                });

            modelBuilder.Entity("Googster.Models.FeedBag", b =>
                {
                    b.HasOne("Googster.Models.Feed", "Feed")
                        .WithMany()
                        .HasForeignKey("FeedId");
                });

            modelBuilder.Entity("Googster.Models.Lane", b =>
                {
                    b.HasOne("Googster.Models.Farm", "Farm")
                        .WithMany()
                        .HasForeignKey("FarmId");
                });

            modelBuilder.Entity("Googster.Models.Tree", b =>
                {
                    b.HasOne("Googster.Models.Lane", "Lane")
                        .WithMany()
                        .HasForeignKey("LaneId");
                });
#pragma warning restore 612, 618
        }
    }
}
